plugins {
    id 'war'
    id 'org.gretty' version '3.0.3'  
    id 'java'
}

repositories {
    jcenter()
}

ext {
    mainSourcesDir = 'src/main/java'
}

sourceSets {
    main {
        java {
            srcDir mainSourcesDir
        }
    }
}

dependencies {
    providedCompile 'javax.servlet:javax.servlet-api:4.0.1' 
    
    implementation 'org.postgresql:postgresql:9.3-1104-jdbc41'    
    implementation 'log4j:log4j:1.2.17'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    
    testImplementation 'junit:junit:4.12'
}

test {
    filter {
    	//These Tests need the database running, as such they are excluded from the normal tests.  
        excludeTestsMatching "*.PersistenceTest*"
        includeTestsMatching "org.wahlzeit.*"
    }
    testLogging {
            events "passed", "skipped", "failed"

            afterSuite { desc, result ->
                if (!desc.parent) {
                    println "Tests run: ${result.testCount}, " +
                            "Failures: ${result.failedTestCount}, " +
                            "Skipped: ${result.skippedTestCount}"
                }
            }
        }
}

//Separate task for running the tests needing the database running.
task persistenceTest(type: Test) {
    filter {
        includeTestsMatching "*PersistenceTest*"
    }
    testLogging {
            events "passed", "skipped", "failed"

            afterSuite { desc, result ->
                if (!desc.parent) {
                    println "Tests run: ${result.testCount}, " +
                            "Failures: ${result.failedTestCount}, " +
                            "Skipped: ${result.skippedTestCount}"
                }
            }
        }
}

//Separate task for running all tests.
task fullTest(type: Test) {
    filter {
        includeTestsMatching "org.wahlzeit.*"
    }
    testLogging {
            events "passed", "skipped", "failed"

            afterSuite { desc, result ->
                if (!desc.parent) {
                    println "Tests run: ${result.testCount}, " +
                            "Failures: ${result.failedTestCount}, " +
                            "Skipped: ${result.skippedTestCount}"
                }
            }
        }
}

